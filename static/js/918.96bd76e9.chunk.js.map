{"version":3,"file":"static/js/918.96bd76e9.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IAAA,sCAAyCD,IAFvC,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKC,SAHI,gCAKzBC,QAAQC,IAAR,MALyB,yDAAH,qDASbC,EAAO,mCAAG,WAAMC,GAAN,gGAEIR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCT,IAFtC,cAEbG,EAFa,yBAGZA,EAASC,MAHG,gCAKnBE,QAAQC,IAAR,MALmB,yDAAH,sDASPG,EAAU,mCAAG,WAAMC,GAAN,gGAECV,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBW,IAHtB,cAEhBR,EAFgB,yBAKfA,GALe,gCAOtBG,QAAQC,IAAR,MAPsB,yDAAH,sDAWVK,EAAS,mCAAG,WAAMH,GAAN,gGAEER,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CT,IAF5C,cAEfG,EAFe,yBAGdA,EAASC,MAHK,gCAKrBE,QAAQC,IAAR,MALqB,yDAAH,sDASTM,EAAY,mCAAG,WAAMJ,GAAN,gGAEDR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CT,IAFzC,cAElBG,EAFkB,yBAGjBA,EAASC,MAHQ,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,qD,8IC1CzB,EAA6B,+BAA7B,EAAmE,yBAAnE,EAAwG,8BAAxG,EAAmJ,+BAAnJ,EAAmM,mC,SCiEnM,EA7DmB,WACjB,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SACrC,GAA0BP,EAAAA,EAAAA,WAAS,kBAAMM,GAAe,EAArB,IAAnC,eAAOT,EAAP,KAAcW,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACQhB,EAAAA,EAAAA,IAAWU,GADnB,OACTjB,EADS,OAEfa,EAAUb,EAASC,KAAKC,SACxBiB,EAAS,IAHM,2CAAH,qDAKVF,GACFM,GAEH,GAAE,CAACN,IAEJ,IAIMO,EAAY,mCAAG,WAAMC,GAAN,iEACnBA,EAAEC,iBACFV,EAAgB,CAAER,MAAOA,IACzBW,EAAS,IAHU,2CAAH,sDAMlB,OACE,iBAAKQ,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAUC,SAAUL,EAArC,WACE,kBACEG,UAAWC,EACXE,KAAK,OACLC,MAAOvB,EACPwB,SAjBa,SAAAP,GACnBN,EAASM,EAAEQ,OAAOF,MACnB,KAiBK,mBAAQJ,UAAWC,EAAgBE,KAAK,SAAxC,wBAIF,yBACGlB,GAAUA,EAAOsB,OAAS,IACzB,wBACGtB,EAAOuB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAO9B,EAAS,EAATA,GACpB,OACE,eAAIqB,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMS,GAAE,iBAAY/B,GAAMgC,MAAO,CAAEC,KAAMnB,GAAzC,SACGgB,KAFmC9B,EAM3C,UAMZ,C","sources":["api/movies-api.jsx","webpack://react-homework-template/./src/pages/MoviesPage.module.css?f2bc","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '87b6dca2cf33c39bc2e94fd412793a01';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchId = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchQuery = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesPage\":\"MoviesPage_moviesPage__BisFe\",\"form\":\"MoviesPage_form__vECho\",\"formInput\":\"MoviesPage_formInput__nwEzf\",\"formButton\":\"MoviesPage_formButton__fPR70\",\"moviesPageItem\":\"MoviesPage_moviesPageItem__t5hz2\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { fetchQuery } from '../api/movies-api';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const response = await fetchQuery(searchQuery);\n      setMovies(response.data.results);\n      setQuery('');\n    };\n    if (searchQuery) {\n      getMovie();\n    }\n  }, [searchQuery]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  return (\n    <div className={css.moviesPage}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button className={css.formButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div>\n        {movies && movies.length > 0 && (\n          <ul>\n            {movies.map(({ title, id }) => {\n              return (\n                <li className={css.moviesPageItem} key={id}>\n                  <Link to={`/movie/${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","console","log","fetchId","id","fetchQuery","query","fetchCast","fetchReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","setQuery","location","useLocation","useEffect","getMovie","handleSubmit","e","preventDefault","className","css","onSubmit","type","value","onChange","target","length","map","title","to","state","from"],"sourceRoot":""}